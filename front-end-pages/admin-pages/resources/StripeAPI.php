<?php
require_once __DIR__ . '/vendor/autoload.php';

define('STRIPE_SECRET_KEY_PATH', '/home/ubuntu/stripe_secret.txt');
define('STRIPE_PUB_KEY_PATH', '/home/ubuntu/stripe_public.txt');

/**
 * Echos a javascript button which builds the Stripe checkout
 */
function getStripeCheckout() {
    $stripe_pub_key = trim(file_get_contents(STRIPE_PUB_KEY_PATH));
    echo <<<END

    <script
        src="https://checkout.stripe.com/checkout.js" class="stripe-button"
        data-key="$stripe_pub_key"
        data-amount="2500"
        data-name="Decatur Makerspace"
        data-description="Membership"
        data-image="https://stripe.com/img/documentation/checkout/marketplace.png"
        data-locale="auto"
        data-zip-code="true">
    </script>

END;
}

/**
 * Returns a Stripe customer object created from the token generated by checkout
 */
function createStripeCustomer($email, $token) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    $customer = \Stripe\Customer::create(array(
      "email" => $email,
      "source" => $token,
    ));

    return $customer;
}

/**
 * Charge a stripe customer an amount
 */
function chargeStripeCustomer($id, $amount) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    $charge = \Stripe\Charge::create(array(
      "amount" => $amount,
      "currency" => "usd",
      "customer" => $id
    ));

    return $charge;
}

/**
 * Subscribe a stripe customer to a plan
 */
function subscribeStripeCustomer($id, $plan) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    \Stripe\Subscription::create(array(
      "customer" => $id,
      "plan" => $plan,
    ));
}

/**
 * Updates the secret key for Stripe
 */
function updateStripeSecret($newSecret) {
    file_put_contents(STRIPE_SECRET_KEY_PATH, newSecret);
}

/**
 * Gets the secret key for Stripe
 */
function getStripeSecret() {
    return file_get_contents(STRIPE_SECRET_KEY_PATH);
}

/**
 * Updates the public key for Stripe
 */
function updateStripePublic($newPublic) {
    file_put_contents(STRIPE_PUB_KEY_PATH, newPublic);
}

/**
 * Gets the public key for Stripe
 */
function getStripePublic() {
    return file_get_contents(STRIPE_PUB_KEY_PATH);
}